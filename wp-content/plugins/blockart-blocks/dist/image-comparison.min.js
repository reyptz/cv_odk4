(()=>{"use strict";var __webpack_require__={};__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.g.importScripts&&(scriptUrl=__webpack_require__.g.location+"");var scriptUrl,document=__webpack_require__.g.document;if(!scriptUrl&&document&&!(scriptUrl=document.currentScript?document.currentScript.src:scriptUrl)){var scripts=document.getElementsByTagName("script");if(scripts.length)for(var i=scripts.length-1;-1<i&&(!scriptUrl||!/^http(s?):/.test(scriptUrl));)scriptUrl=scripts[i--].src}if(!scriptUrl)throw new Error("Automatic publicPath is not supported in this browser");scriptUrl=scriptUrl.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=scriptUrl;var $$,toArray,each,classToOptionsMapping;function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _slicedToArray(arr,i){return function(arr){if(Array.isArray(arr))return arr}(arr)||function(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function(o,minLen){var n;if(o)return"string"==typeof o?_arrayLikeToArray(o,minLen):"Map"===(n="Object"===(n=Object.prototype.toString.call(o).slice(8,-1))&&o.constructor?o.constructor.name:n)||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}(arr,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _typeof(o){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o})(o)}function toPropertyKey(t){t=function(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0===e)return("string"===r?String:Number)(t);if("object"!=_typeof(e=e.call(t,r||"default")))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"==_typeof(t)?t:t+""}function ownKeys(e,r){var o,t=Object.keys(e);return Object.getOwnPropertySymbols&&(o=Object.getOwnPropertySymbols(e),r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)),t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){var obj,value;obj=e,value=t[r=r],(r=toPropertyKey(r))in obj?Object.defineProperty(obj,r,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[r]=value}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}__webpack_require__.p=window._BLOCKART_WEBPACK_PUBLIC_PATH_,document=window.blockartUtils,$$=document.$$,__webpack_require__=document.domReady,toArray=document.toArray,each=document.each,classToOptionsMapping={"orientation-vertical":{linesOrientation:"vertical"}},__webpack_require__(function(){var imageContainers=toArray($$(".blockart-image-comparison-image-container"));imageContainers.length&&each(imageContainers,function(container){var options=_objectSpread({container:container,textPosition:"bottom-left"},Object.entries(classToOptionsMapping).filter(function(_ref){_ref=_slicedToArray(_ref,1)[0];return container.classList.contains(_ref)}).map(function(_ref3){return _slicedToArray(_ref3,2)[1]}).reduce(function(acc,curr){return _objectSpread(_objectSpread({},acc),curr)},{}));new Dics(options)})})})();